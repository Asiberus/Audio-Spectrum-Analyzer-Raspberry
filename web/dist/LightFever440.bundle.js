/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
window.LightFever440 =
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/LightFever440.js":
/*!*****************************!*\
  !*** ./js/LightFever440.js ***!
  \*****************************/
/*! namespace exports */
/*! export default [provided] [used in main] [usage prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _css_LightFever440_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/LightFever440.scss */ \"./css/LightFever440.scss\");\n/* harmony import */ var _components_ManualController_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/ManualController.js */ \"./js/components/ManualController.js\");\n/* harmony import */ var _components_AnalyzerController_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/AnalyzerController.js */ \"./js/components/AnalyzerController.js\");\n/* harmony import */ var _components_ModalFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/ModalFactory.js */ \"./js/components/ModalFactory.js\");\n/* harmony import */ var _components_Utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Utils.js */ \"./js/components/Utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\nvar LightFever440 = /*#__PURE__*/function () {\n  /** @summary <h1>Light Fever 440 web controller</h1>\r\n   * @author Arthur Beaulieu, RaphaÃ«l Beekmann\r\n   * @since November 2020\r\n   * @description <blockquote>This module is made to abstract the Light Fever 440 script hosted on the Py web server.\r\n   * The localhost is the entrypoint for such controller. All methods described here are made to switch from exposed\r\n   * modes, to set effect in action and to provide options for these efects. This constructor doesn't take any arguments\r\n   * and is made to work standalone, without any external libraries or class. See the <code>README.md</code> file to know\r\n   * how to set up this project on your Raspberry.</blockquote> */\n  function LightFever440() {\n    _classCallCheck(this, LightFever440);\n\n    /** @public\r\n     * @member {string} - The application version number */\n    this.VERSION = '0.0.1';\n    /*  ---------------------------------------  DOM internal attributes  --------------------------------------------  */\n\n    /** @private\r\n     * @member {object} - All DOM elements used for interaction in the app */\n\n    this._dom = {\n      title: document.getElementById('title'),\n      version: document.getElementById('version'),\n      toggle: document.getElementById('toggle-light-fever'),\n      manual: document.getElementById('manual-mode'),\n      analyzer: document.getElementById('analyzer-mode'),\n      selection: document.getElementById('selection-border'),\n      manualContainer: document.getElementById('manual-container'),\n      autoContainer: document.getElementById('auto-container'),\n      themeSwitch: document.getElementById('theme-switch'),\n      status: document.getElementById('status-text'),\n      globalButtons: {\n        // Buttons that are available in both modes, and that overrides selected effect for given mode\n        STROBOSCOPE: document.getElementById('global-stroboscope'),\n        strobOpts: document.getElementById('strob-opts')\n      }\n    };\n    /*  -------------------------------------  Internal usefull attributes  ------------------------------------------  */\n    // Useful bools and variables\n\n    /** @private\r\n     * @member {boolean} - The state of Light Fever 440 (switched on/off) */\n\n    this._isActive = false;\n    /** @private\r\n     * @member {boolean} - The UI applied theme (either light/dark), see CSS */\n\n    this._isDark = true;\n    /** @private\r\n     * @member {object} - The previous applied effect when global effect is toggled, for proper restoration */\n\n    this._previousEffect = null;\n    /*  ---------------------------  Ajax parametrs (send on each /action POST call)  --------------------------------  */\n\n    /** @private\r\n     * @member {string} - The Light Fever 440 state (either ON/OFF) */\n\n    this._state = 'OFF';\n    /** @private\r\n     * @member {string} - The Light Fever 440 mode (either MANUAL/AUDIO_ANALYSE) */\n\n    this._mode = 'MANUAL';\n    /** @private\r\n     * @member {string} - The Light Fever 440 effect (depends on the selected mode, see <code>README.md</code> for the detailled API) */\n\n    this._effect = 'UNIFORM';\n    /** @private\r\n     * @member {object} - The options to apply to a given effect */\n\n    this._options = null;\n    /*  ------------------------------------------  Mode controllers  ------------------------------------------------  */\n\n    this._mc = new _components_ManualController_js__WEBPACK_IMPORTED_MODULE_1__.default();\n    this._ac = new _components_AnalyzerController_js__WEBPACK_IMPORTED_MODULE_2__.default();\n    /*  --------------------------------------  Controller initialization  -------------------------------------------  */\n\n    console.log(\"LightFever440.js - Version \".concat(this.VERSION)); // Make UI interactive by listening to user actions\n\n    this._initEvents(); // Init web view from Light Fever 440 state\n\n\n    this._initState();\n  }\n  /*  --------------------------------------------------------------------------------------------------------------- */\n\n  /*  ------------------------------------------  UI INITIALIZATION  -----------------------------------------------  */\n\n  /*  --------------------------------------------------------------------------------------------------------------- */\n\n  /** @method\r\n   * @name _initEvents\r\n   * @private\r\n   * @memberof LightFever440\r\n   * @description <blockquote>Subscribe to all DOM element that can interact with the web server to modify the Light Fever 440\r\n   * state, mode, effect and options. There are also events to control the UI aspect.</blockquote> **/\n\n\n  _createClass(LightFever440, [{\n    key: \"_initEvents\",\n    value: function _initEvents() {\n      this._dom.toggle.addEventListener('click', this._toggleLightFever.bind(this));\n\n      this._dom.manual.addEventListener('click', this._switchMode.bind(this));\n\n      this._dom.analyzer.addEventListener('click', this._switchMode.bind(this));\n\n      this._dom.themeSwitch.addEventListener('click', this._switchTheme.bind(this)); // Listeners for global effects\n\n\n      this._dom.globalButtons.STROBOSCOPE.addEventListener('touchstart', this._startStroboscope.bind(this));\n\n      this._dom.globalButtons.STROBOSCOPE.addEventListener('touchend', this._stopStroboscope.bind(this));\n\n      this._dom.globalButtons.strobOpts.addEventListener('click', this._stroboscopeModal.bind(this));\n    }\n    /** @method\r\n     * @name _initState\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Retrieve the Light Fever 440 state and apply its parameters to the UI so it matches this state.\r\n     * This is made to update the UI if the LightFever440 was previously launched, to avoid the UI to be inconsistent.</blockquote> **/\n\n  }, {\n    key: \"_initState\",\n    value: function _initState() {\n      var _this = this;\n\n      // Apply theme if saved in local storage\n      var theme = window.localStorage.getItem('theme'); // No need to check for dark theme, as it is the default theme\n\n      if (theme === 'light') {\n        this._isDark = false;\n        document.body.classList.remove('dark-theme');\n        document.body.classList.add('light-theme');\n        this._dom.themeSwitch.checked = true;\n        this._dom.status.innerHTML = 'Switched to light theme';\n      } // Update version number\n\n\n      this._dom.version.innerHTML = this.VERSION; // Perform async call to retrieve LightFever440 state\n\n      this._getState().then(function (response) {\n        _this._dom.status.innerHTML = 'Set Light Fever 440 state'; // No need to check for OFF, as it is the default state\n\n        if (response.state === 'ON') {\n          _this._isActive = true;\n          _this._dom.toggle.innerHTML = 'ON';\n\n          _this._dom.toggle.classList.remove('light-fever-off');\n\n          _this._dom.toggle.classList.add('light-fever-on');\n        } // No need to check manual aswell, as it is the default mode\n\n\n        if (response.mode === 'AUDIO_ANALYSE') {\n          _this._dom.manual.classList.remove('selected');\n\n          _this._dom.analyzer.classList.add('selected');\n\n          _this._dom.selection.style.left = '50%';\n          _this._dom.manualContainer.style.left = '-100%';\n          _this._dom.autoContainer.style.left = '0';\n          _this._mode = 'AUDIO_ANALYSE';\n        } // Same with effect, UNIFORM is the default one for both modes\n\n\n        if (response.effect !== 'UNIFORM') {\n          // Select the buttons object to match the activated mode\n          if (_this._mode === 'MANUAL') {\n            _this._mc.initEffect(response.effect);\n          } else {\n            _this._ac.initEffect(response.effect);\n          }\n        } // Save effect in local\n\n\n        _this._effect = response.effect;\n        console.error('LightFever440 : Light system state preoperly loaded');\n      })[\"catch\"](function (error) {\n        _this._dom.status.innerHTML = 'Unable to load state';\n        console.error('LightFever440 : Unable to load light system state', error);\n      });\n    }\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /*  ------------------------------------------  BUTTON INTERACTION  ----------------------------------------------  */\n\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /** @method\r\n     * @name _toggleLightFever\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Toggle the Light Fever 440 state depending on its previous state. Can be either ON or OFF.</blockquote> **/\n\n  }, {\n    key: \"_toggleLightFever\",\n    value: function _toggleLightFever() {\n      if (this._isActive === false) {\n        this._isActive = true;\n        this._dom.toggle.innerHTML = 'ON';\n\n        this._dom.toggle.classList.remove('light-fever-off');\n\n        this._dom.toggle.classList.add('light-fever-on');\n\n        this._startLightFever();\n      } else {\n        this._isActive = false;\n        this._dom.toggle.innerHTML = 'OFF';\n\n        this._dom.toggle.classList.remove('light-fever-on');\n\n        this._dom.toggle.classList.add('light-fever-off');\n\n        this._stopLightFever();\n      }\n    }\n    /** @method\r\n     * @name _startLightFever\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Explicit method to set the Light Fever 440 state at ON.</blockquote> **/\n\n  }, {\n    key: \"_startLightFever\",\n    value: function _startLightFever() {\n      var _this2 = this;\n\n      this._dom.title.classList.add('activated');\n\n      this._dom.version.classList.add('activated');\n\n      this._state = 'ON';\n      this.sendAction().then(function () {\n        _this2._dom.status.innerHTML = 'Light Fever 440 started';\n        console.log('LightFever440 : Light system successfully started');\n      })[\"catch\"](function (error) {\n        _this2._dom.status.innerHTML = 'Unable to start Light Fever 440';\n        console.error('LightFever440 : Unable to start light system', error);\n      });\n    }\n    /** @method\r\n     * @name _stopLightFever\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Explicit method to set the Light Fever 440 state at OFF.</blockquote> **/\n\n  }, {\n    key: \"_stopLightFever\",\n    value: function _stopLightFever() {\n      var _this3 = this;\n\n      this._dom.title.classList.remove('activated');\n\n      this._dom.version.classList.remove('activated');\n\n      this._state = 'OFF';\n      this.sendAction().then(function () {\n        _this3._dom.status.innerHTML = 'Light Fever 440 stopped';\n        console.log('LightFever440 : Light system successfully stopped');\n      })[\"catch\"](function (error) {\n        _this3._dom.status.innerHTML = 'Unable to stop Light Fever 440';\n        console.error('LightFever440 : Unable to stop light system', error);\n      });\n    }\n    /** @method\r\n     * @name _switchMode\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Switch the Light Fever 440 in MANUAL or AUTO_ANALYSE mode and update UI accordingly.</blockquote>\r\n     * @param {object} event - The event data (click) to retrieve the event target and update it **/\n\n  }, {\n    key: \"_switchMode\",\n    value: function _switchMode(event) {\n      var _this4 = this;\n\n      if (event.target.dataset.manual === 'false') {\n        this._dom.manual.classList.remove('selected');\n\n        this._dom.analyzer.classList.add('selected');\n\n        this._dom.selection.style.left = '50%';\n        this._dom.manualContainer.style.left = '-100%';\n        this._dom.autoContainer.style.left = '0';\n        this._mode = 'AUDIO_ANALYSE';\n        this._dom.status.innerHTML = 'Audio analyzer activated';\n        this._effect = this._ac.getActiveEffect();\n      } else {\n        this._dom.analyzer.classList.remove('selected');\n\n        this._dom.manual.classList.add('selected');\n\n        this._dom.selection.style.left = '0';\n        this._dom.manualContainer.style.left = '0';\n        this._dom.autoContainer.style.left = '100%';\n        this._mode = 'MANUAL';\n        this._dom.status.innerHTML = 'Manual control activated';\n        this._effect = this._mc.getActiveEffect();\n      } // Update light fever script with new internals\n\n\n      if (this._isActive === true) {\n        this.sendAction().then(function () {\n          _this4._dom.status.innerHTML = \"Switched to mode \".concat(_this4._mode);\n          console.log('LightFever440 : Light system mode successfully switched');\n        })[\"catch\"](function (error) {\n          _this4._dom.status.innerHTML = 'Unable to switch mode';\n          console.error('LightFever440 : Unable to switch the light system mode', error);\n        });\n      }\n    }\n    /** @method\r\n     * @name _startStroboscope\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Explicit method to start the global stroboscope effect. It will override any selected effect and\r\n     * will be active while the user hold the button. On release, the previous selected effect is restored.</blockquote>\r\n     * @param {object} event - The event data (touchdown) to avoid default behavior on hold (ctx menu) **/\n\n  }, {\n    key: \"_startStroboscope\",\n    value: function _startStroboscope(event) {\n      var _this5 = this;\n\n      if (event.target.id === 'global-stroboscope') {\n        event.preventDefault(); // Avoid context to open when keeping touch down\n\n        this._previousEffect = this._effect;\n\n        this._dom.globalButtons.STROBOSCOPE.classList.add('selected');\n\n        this._effect = 'STROBOSCOPE';\n\n        if (this._isActive === true) {\n          this.sendAction().then(function () {\n            _this5._dom.status.innerHTML = 'Stroboscope activated';\n            console.log('LightFever440 : Light system stroboscope successfully started');\n          })[\"catch\"](function (error) {\n            _this5._dom.status.innerHTML = 'Unable to start stroboscope';\n            console.error('LightFever440 : Unable to start the stroboscope effect', error);\n          });\n        }\n      }\n    }\n    /** @method\r\n     * @name _stopStroboscope\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Explicit method to stop the global stroboscope effect. Called when the button is released,\r\n     * the previous selected effect will be restored.</blockquote> **/\n\n  }, {\n    key: \"_stopStroboscope\",\n    value: function _stopStroboscope() {\n      var _this6 = this;\n\n      this._effect = this._previousEffect;\n      this._previousEffect = null;\n\n      this._dom.globalButtons.STROBOSCOPE.classList.remove('selected');\n\n      if (this._isActive === true) {\n        this.sendAction().then(function () {\n          _this6._dom.status.innerHTML = 'Stroboscope deactivated';\n          console.log('LightFever440 : Light system stroboscope successfully stopped');\n        })[\"catch\"](function (error) {\n          _this6._dom.status.innerHTML = 'Unable to stop stroboscope';\n          console.error('LightFever440 : Unable to stop the stroboscope effect', error);\n        });\n      }\n    }\n    /** @method\r\n     * @name _setOptionsForEffect\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Internal method to be called before any sendAction for a given effect. It will send options that are\r\n     * related to the selected effect, and use the inputs values that matches the effect.</blockquote> **/\n\n  }, {\n    key: \"_setOptionsForEffect\",\n    value: function _setOptionsForEffect() {\n      if (this._mode === 'MANUAL') {\n        this._options = this._mc.getOptions();\n      } else {\n        this._options = this._ac.getOptions();\n      }\n\n      if (this._effect === 'STROBOSCOPE') {\n        this._options = {\n          color: _components_Utils_js__WEBPACK_IMPORTED_MODULE_4__.hexToRgb(window.localStorage.getItem('strob-color')),\n          delay: parseInt(window.localStorage.getItem('strob-delay')) || 50 // ms\n\n        };\n      }\n\n      console.log(\"LightFever440 : Mode \".concat(this._mode, \", Effect \").concat(this._effect, \", Options\"), this._options);\n    }\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /*  ------------------------------------------  FRONT ONLY METHODS  ----------------------------------------------  */\n\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /** @method\r\n     * @name _switchTheme\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Switch the UI theme between light or dark theme. Those are defined in the CSS file. This value\r\n     * is stored in the local storage, to be restored when the user opens a new session.</blockquote>\r\n     * @param {object} event - The event data (click) to retrieve the event target and update it **/\n\n  }, {\n    key: \"_switchTheme\",\n    value: function _switchTheme(event) {\n      if (event.target.checked === true) {\n        this._isDark = false;\n        document.body.classList.remove('dark-theme');\n        document.body.classList.add('light-theme');\n        this._dom.status.innerHTML = 'Switched to light theme';\n        window.localStorage.setItem('theme', 'light');\n      } else {\n        this._isDark = true;\n        document.body.classList.remove('light-theme');\n        document.body.classList.add('dark-theme');\n        this._dom.status.innerHTML = 'Switched to dark theme';\n        window.localStorage.setItem('theme', 'dark');\n      }\n    }\n    /** @method\r\n     * @name _strobOptionsModal\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Open the stroboscope options modal and handle its interactivity (the whole lifecycle).</blockquote> **/\n\n  }, {\n    key: \"_stroboscopeModal\",\n    value: function _stroboscopeModal() {\n      new _components_ModalFactory_js__WEBPACK_IMPORTED_MODULE_3__.default('STROBOSCOPE');\n    }\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /*  ------------------------------------------  SERVER CALLS UTILS  ----------------------------------------------  */\n\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /** @method\r\n     * @name _getState\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>This method will perform a GET call to the Py web server, to retrieve the activated mode, effect and\r\n     * options, in order to initialize the UI accordingly.</blockquote>\r\n     * @returns {promise} The request <code>Promise</code>, format response as JSON on resolve, as error code string on reject **/\n\n  }, {\n    key: \"_getState\",\n    value: function _getState() {\n      return new Promise(function (resolve, reject) {\n        _components_Utils_js__WEBPACK_IMPORTED_MODULE_4__.ajax('state').then(resolve)[\"catch\"](reject);\n      });\n    }\n    /** @method\r\n     * @name sendAction\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>This method will perform a POST call to the Py web server, to update the Light Fever 440 mode, effect\r\n     * and options, so it matches the UI state.</blockquote>\r\n     * @returns {promise} The request <code>Promise</code>, format response as JSON on resolve, as error code string on reject **/\n\n  }, {\n    key: \"sendAction\",\n    value: function sendAction() {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this7._setOptionsForEffect(); // Always update the option object before calling <code>action</code>\n\n\n        _components_Utils_js__WEBPACK_IMPORTED_MODULE_4__.ajax('action', {\n          state: _this7._state,\n          mode: _this7._mode,\n          effect: _this7._effect,\n          options: _this7._options\n        }).then(resolve)[\"catch\"](reject)[\"finally\"](function () {\n          _this7._options = null;\n        }); // Restore option to null after call\n      });\n    }\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n    /*  --------------------------------------------  GETTER / SETTER  -----------------------------------------------  */\n\n    /*  --------------------------------------------------------------------------------------------------------------- */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this._isActive;\n    }\n  }, {\n    key: \"effect\",\n    get: function get() {\n      return this._effect;\n    },\n    set: function set(effect) {\n      this._effect = effect;\n    }\n  }, {\n    key: \"status\",\n    set: function set(status) {\n      this._dom.status.innerHTML = status;\n    }\n  }]);\n\n  return LightFever440;\n}();\n\nwindow.LF440 = new LightFever440(); // Instantiate a controller here to avoid any additionnal code in HTML markup\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LightFever440); // Default module export\n\n//# sourceURL=webpack://LightFever440/./js/LightFever440.js?");

/***/ }),

/***/ "./js/components/AnalyzerController.js":
/*!*********************************************!*\
  !*** ./js/components/AnalyzerController.js ***!
  \*********************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _InputFactory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputFactory.js */ \"./js/components/InputFactory.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"./js/components/Utils.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar AnalyzerController = /*#__PURE__*/function () {\n  function AnalyzerController() {\n    _classCallCheck(this, AnalyzerController);\n\n    this._dom = {\n      UNIFORM: {\n        button: document.getElementById('auto-uniform'),\n        container: document.getElementById('auto-uniform-options'),\n        peakDetection: document.getElementById('auto-uniform-peak-detection'),\n        peakSensitivity: document.getElementById('auto-uniform-peak-sensitivity'),\n        peakSensitivityText: document.getElementById('auto-uniform-peak-sensitivity-value'),\n        colorSwitch: document.getElementById('auto-uniform-color-switch'),\n        color: document.getElementById('auto-uniform-color')\n      },\n      PROGRESSIVE: {\n        button: document.getElementById('auto-progressive'),\n        container: document.getElementById('auto-progressive-options'),\n        size: document.getElementById('auto-progressive-size'),\n        sizeText: document.getElementById('auto-progressive-size-value'),\n        reverse: document.getElementById('auto-progressive-reverse')\n      },\n      PULSE: {\n        button: document.getElementById('auto-pulse'),\n        container: document.getElementById('auto-pulse-options'),\n        maxLength: document.getElementById('auto-pulse-length'),\n        maxLengthText: document.getElementById('auto-pulse-length-value'),\n        colorSwitch: document.getElementById('auto-pulse-color-switch'),\n        color: document.getElementById('auto-pulse-color')\n      }\n    };\n    this._inputFactory = new _InputFactory_js__WEBPACK_IMPORTED_MODULE_0__.default({\n      scope: this,\n      update: this._updateEffect\n    });\n\n    this._initEvents();\n  }\n\n  _createClass(AnalyzerController, [{\n    key: \"_initEvents\",\n    value: function _initEvents() {\n      /* Uniform effect options */\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.button\n      });\n\n      this._inputFactory[\"new\"]('SWITCH', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.peakDetection,\n        lsKey: 'auto-uniform-peak-detection'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.peakSensitivity,\n        label: this._dom.UNIFORM.peakSensitivityText,\n        \"default\": '0',\n        lsKey: 'auto-uniform-peak-sensitivity'\n      });\n\n      this._inputFactory[\"new\"]('COLOR_OVERRIDE', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.colorSwitch,\n        color: this._dom.UNIFORM.color,\n        \"default\": '#FFFFFF',\n        lsKey: 'auto-uniform-color'\n      });\n      /* Progressive effect options */\n\n\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'PROGRESSIVE',\n        element: this._dom.PROGRESSIVE.button\n      });\n\n      this._inputFactory[\"new\"]('SWITCH', {\n        effect: 'PROGRESSIVE',\n        element: this._dom.PROGRESSIVE.reverse,\n        lsKey: 'auto-progressive-reverse'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'PROGRESSIVE',\n        element: this._dom.PROGRESSIVE.size,\n        label: this._dom.PROGRESSIVE.sizeText,\n        \"default\": '5',\n        lsKey: 'auto-progressive-size'\n      });\n      /* Pulse effect options */\n\n\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'PULSE',\n        element: this._dom.PULSE.button\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'PULSE',\n        element: this._dom.PULSE.maxLength,\n        label: this._dom.PULSE.maxLengthText,\n        \"default\": '100',\n        lsKey: 'auto-pulse-length'\n      });\n\n      this._inputFactory[\"new\"]('COLOR_OVERRIDE', {\n        effect: 'PULSE',\n        element: this._dom.PULSE.colorSwitch,\n        color: this._dom.PULSE.color,\n        \"default\": '#FFFFFF',\n        lsKey: 'auto-pulse-color'\n      });\n    }\n    /** @method\r\n     * @name _updateEffect\r\n     * @private\r\n     * @memberof LightFever440\r\n     * @description <blockquote>Switch the Light Fever 440 effect using the HTML data-effect set on each of the concerned buttons.\r\n     * See <code>README.md</code> for the detailled API description.</blockquote>\r\n     * @param {object} event - The event data (click) to retrieve the event target and update it **/\n\n  }, {\n    key: \"_updateEffect\",\n    value: function _updateEffect(arg) {\n      var effect = arg; // Init with presumed string\n\n      if (typeof arg !== 'string') {\n        effect = arg.target.dataset.effect; // Update effect with event target specific effect info\n      }\n\n      this._unselectAllEffect(); // Then use target as current selection\n\n\n      window.LF440.effect = effect;\n      this._dom[window.LF440.effect].container.style.display = 'block';\n\n      this._dom[window.LF440.effect].button.classList.add('selected');\n\n      if (window.LF440.isActive === true) {\n        window.LF440.sendAction().then(function () {\n          window.F440.status = \"Effect \".concat(window.LF440.effect, \" activated\");\n          console.log(\"AnalyzerController : Successfully activate effect \".concat(window.LF440.effect));\n        })[\"catch\"](function () {\n          window.LF440.status = \"Unable to set effect \".concat(window.LF440.effect);\n          console.error(\"AnalyzerController : Failed to activate effect \".concat(window.LF440.effect));\n        });\n      } else {\n        window.LF440.status = \"Please start LightFever440\";\n        console.error(\"AnalyzerController : Failed to activate effect \".concat(window.LF440.effect, \", LightFever440 isn't activated\"));\n      }\n    }\n  }, {\n    key: \"_unselectAllEffect\",\n    value: function _unselectAllEffect() {\n      // Unselect all buttons and hide all associated options\n      for (var _i = 0, _Object$entries = Object.entries(this._dom); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 1),\n            key = _Object$entries$_i[0];\n\n        this._dom[key].button.classList.remove('selected');\n\n        this._dom[key].container.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"initEffect\",\n    value: function initEffect(effect) {\n      this._unselectAllEffect(); // Update effect toggled\n\n\n      this._dom[effect].button.classList.add('selected');\n\n      this._dom[effect].container.style.display = 'block';\n    }\n  }, {\n    key: \"getActiveEffect\",\n    value: function getActiveEffect() {\n      // Find selected effect in destination mode\n      for (var _i2 = 0, _Object$entries2 = Object.entries(this._dom); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 1),\n            key = _Object$entries2$_i[0];\n\n        if (this._dom[key].button.classList.contains('selected')) {\n          this._dom[key].container.style.display = 'block';\n          return this._dom[key].button.dataset.effect;\n        }\n      }\n\n      return 'UNIFORM';\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = {};\n\n      if (window.LF440.effect === 'UNIFORM') {\n        options = {\n          peakDetection: this._dom.UNIFORM.peakDetection.checked,\n          peakSensitivity: parseInt(this._dom.UNIFORM.peakSensitivity.value) / 100\n        };\n\n        if (this._dom.UNIFORM.colorSwitch.checked) {\n          options.color = _Utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToRgb(this._dom.UNIFORM.color.value);\n        }\n      } else if (window.LF440.effect === 'PROGRESSIVE') {\n        options = {\n          size: parseInt(this._dom.PROGRESSIVE.size.value),\n          reverse: this._dom.PROGRESSIVE.reverse.checked\n        };\n      } else if (window.LF440.effect === 'PULSE') {\n        options = {\n          max: parseInt(this._dom.PULSE.maxLength.value) / 100\n        };\n\n        if (this._dom.PULSE.colorSwitch.checked) {\n          options.color = _Utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToRgb(this._dom.PULSE.color.value);\n        }\n      }\n\n      return options;\n    }\n  }]);\n\n  return AnalyzerController;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnalyzerController);\n\n//# sourceURL=webpack://LightFever440/./js/components/AnalyzerController.js?");

/***/ }),

/***/ "./js/components/InputFactory.js":
/*!***************************************!*\
  !*** ./js/components/InputFactory.js ***!
  \***************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"./js/components/Utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar InputFactory = /*#__PURE__*/function () {\n  function InputFactory(options) {\n    _classCallCheck(this, InputFactory);\n\n    this._scope = options.scope;\n    this._update = options.update;\n  }\n\n  _createClass(InputFactory, [{\n    key: \"new\",\n    value: function _new(type, options) {\n      if (type === 'CLICK') {\n        this._clickEvent(options);\n      } else if (type === 'SWITCH') {\n        this._createSwitch(options);\n      } else if (type === 'SLIDER') {\n        this._createSlider(options);\n      } else if (type === 'COLOR') {\n        this._createColor(options);\n      } else if (type === 'COLOR_OVERRIDE') {\n        this._createColorOverride(options);\n      } else if (type === 'SWITCH_OVERRIDE') {\n        this._createSwitchOverride(options);\n      }\n    }\n  }, {\n    key: \"_clickEvent\",\n    value: function _clickEvent(options) {\n      // Mouse clicked on element\n      this._event('click', options, false);\n    }\n  }, {\n    key: \"_createSwitch\",\n    value: function _createSwitch(options) {\n      options.element.checked = window.localStorage.getItem(options.lsKey) === 'true'; // Mouse release the input, to send action for effect\n\n      this._event('change', options, true, true);\n    }\n  }, {\n    key: \"_event\",\n    value: function _event(verb, options, lsSave) {\n      var _this = this;\n\n      var isSwitch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      options.element.addEventListener(verb, function () {\n        if (lsSave === true) {\n          if (isSwitch === true) {\n            window.localStorage.setItem(options.lsKey, options.element.checked);\n          } else {\n            window.localStorage.setItem(options.lsKey, options.element.value);\n          }\n        }\n\n        _this._update.call(_this._scope, options.effect);\n      });\n    }\n  }, {\n    key: \"_createSlider\",\n    value: function _createSlider(options) {\n      options.label.innerHTML = window.localStorage.getItem(options.lsKey) || options[\"default\"];\n      window.rangesliderJs.create(options.element, {\n        value: window.localStorage.getItem(options.lsKey) || options[\"default\"]\n      });\n\n      this._event('change', options, true, false);\n\n      options.element.addEventListener('input', function () {\n        window.localStorage.setItem(options.lsKey, options.element.value);\n        options.label.innerHTML = options.element.value;\n      });\n    }\n  }, {\n    key: \"_createColor\",\n    value: function _createColor(options) {\n      var _this2 = this;\n\n      options.element.value = window.localStorage.getItem(options.lsKey) || options[\"default\"];\n      options.element.addEventListener('click', function (event) {\n        event.preventDefault(); // Avoid native color picker to open\n\n        _Utils_js__WEBPACK_IMPORTED_MODULE_0__.colorPickerModal(window.localStorage.getItem(options.lsKey), function (color) {\n          window.localStorage.setItem(options.lsKey, color);\n          options.element.value = color;\n\n          _this2._update.call(_this2._scope, options.effect);\n        });\n      });\n    }\n  }, {\n    key: \"_createColorOverride\",\n    value: function _createColorOverride(options) {\n      var _this3 = this;\n\n      options.element.checked = window.localStorage.getItem(\"\".concat(options.lsKey, \"-switch\")) === 'true';\n\n      if (options.element.checked === true) {\n        options.color.parentNode.style.filter = 'opacity(1)';\n      }\n\n      this._event('change', options, false);\n\n      options.element.addEventListener('input', function () {\n        window.localStorage.setItem(\"\".concat(options.lsKey, \"-switch\"), options.element.checked);\n\n        if (options.element.checked === true) {\n          options.color.parentNode.style.filter = 'opacity(1)';\n        } else {\n          options.color.parentNode.style.filter = 'opacity(0.1)';\n        }\n      });\n      options.color.value = window.localStorage.getItem(options.lsKey) || options[\"default\"];\n      options.color.addEventListener('click', function (event) {\n        event.preventDefault();\n\n        if (options.element.checked === true) {\n          _Utils_js__WEBPACK_IMPORTED_MODULE_0__.colorPickerModal(window.localStorage.getItem(options.lsKey), function (color) {\n            window.localStorage.setItem(options.lsKey, color);\n            options.color.value = color;\n\n            _this3._update.call(_this3._scope, options.effect);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_createSwitchOverride\",\n    value: function _createSwitchOverride(options) {\n      var _this4 = this;\n\n      options.element.checked = window.localStorage.getItem(\"\".concat(options.lsKey, \"-switch\")) === 'true';\n\n      if (options.element.checked === true) {\n        options.color.parentNode.style.filter = 'opacity(0.1)';\n      }\n\n      this._event('change', options, false);\n\n      options.element.addEventListener('input', function () {\n        window.localStorage.setItem(\"\".concat(options.lsKey, \"-switch\"), options.element.checked);\n\n        if (options.element.checked === false) {\n          options.color.parentNode.style.filter = 'opacity(1)';\n        } else {\n          options.color.parentNode.style.filter = 'opacity(0.1)';\n        }\n      });\n      options.color.value = window.localStorage.getItem(options.lsKey) || options[\"default\"];\n      options.color.addEventListener('click', function (event) {\n        event.preventDefault();\n\n        if (options.element.checked === false) {\n          _Utils_js__WEBPACK_IMPORTED_MODULE_0__.colorPickerModal(window.localStorage.getItem(options.lsKey), function (color) {\n            window.localStorage.setItem(options.lsKey, color);\n            options.color.value = color;\n\n            _this4._update.call(_this4._scope, options.effect);\n          });\n        }\n      });\n    }\n  }]);\n\n  return InputFactory;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputFactory);\n\n//# sourceURL=webpack://LightFever440/./js/components/InputFactory.js?");

/***/ }),

/***/ "./js/components/ManualController.js":
/*!*******************************************!*\
  !*** ./js/components/ManualController.js ***!
  \*******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _InputFactory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputFactory.js */ \"./js/components/InputFactory.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"./js/components/Utils.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar ManualController = /*#__PURE__*/function () {\n  function ManualController() {\n    _classCallCheck(this, ManualController);\n\n    this._dom = {\n      UNIFORM: {\n        button: document.getElementById('manual-uniform'),\n        container: document.getElementById('manual-uniform-options'),\n        color: document.getElementById('manual-uniform-color'),\n        waveDelta: document.getElementById('manual-uniform-wave-delta'),\n        waveDeltaText: document.getElementById('manual-uniform-wave-delta-value')\n      },\n      CHASE: {\n        button: document.getElementById('manual-chase'),\n        container: document.getElementById('manual-chase-options'),\n        color: document.getElementById('manual-chase-color'),\n        speed: document.getElementById('manual-chase-speed'),\n        speedText: document.getElementById('manual-chase-speed-value'),\n        size: document.getElementById('manual-chase-size'),\n        sizeText: document.getElementById('manual-chase-size-value'),\n        spacing: document.getElementById('manual-chase-spacing'),\n        spacingText: document.getElementById('manual-chase-spacing-value'),\n        rainbow: document.getElementById('manual-chase-rainbow')\n      },\n      RAINBOW: {\n        button: document.getElementById('manual-rainbow'),\n        container: document.getElementById('manual-rainbow-options'),\n        speed: document.getElementById('manual-rainbow-speed'),\n        speedText: document.getElementById('manual-rainbow-speed-value')\n      }\n    };\n    this._inputFactory = new _InputFactory_js__WEBPACK_IMPORTED_MODULE_0__.default({\n      scope: this,\n      update: this._updateEffect\n    });\n\n    this._initEvents();\n  }\n\n  _createClass(ManualController, [{\n    key: \"_initEvents\",\n    value: function _initEvents() {\n      /* Uniform effect options */\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.button\n      });\n\n      this._inputFactory[\"new\"]('COLOR', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.color,\n        \"default\": '#FFFFFF',\n        lsKey: 'manual-uniform-color'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'UNIFORM',\n        element: this._dom.UNIFORM.waveDelta,\n        label: this._dom.UNIFORM.waveDeltaText,\n        \"default\": '0',\n        lsKey: 'manual-uniform-wave-delta'\n      });\n      /* Chase effect options */\n\n\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'CHASE',\n        element: this._dom.CHASE.button\n      });\n\n      this._inputFactory[\"new\"]('SWITCH_OVERRIDE', {\n        effect: 'CHASE',\n        element: this._dom.CHASE.rainbow,\n        color: this._dom.CHASE.color,\n        \"default\": '#FFFFFF',\n        lsKey: 'manual-chase-rainbow'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'CHASE',\n        element: this._dom.CHASE.speed,\n        label: this._dom.CHASE.speedText,\n        \"default\": '50',\n        lsKey: 'manual-chase-speed'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'CHASE',\n        element: this._dom.CHASE.size,\n        label: this._dom.CHASE.sizeText,\n        \"default\": '1',\n        lsKey: 'manual-chase-size'\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'CHASE',\n        element: this._dom.CHASE.spacing,\n        label: this._dom.CHASE.spacingText,\n        \"default\": '2',\n        lsKey: 'manual-chase-spacing'\n      });\n      /* Rainbow effect options */\n\n\n      this._inputFactory[\"new\"]('CLICK', {\n        effect: 'RAINBOW',\n        element: this._dom.RAINBOW.button\n      });\n\n      this._inputFactory[\"new\"]('SLIDER', {\n        effect: 'RAINBOW',\n        element: this._dom.RAINBOW.speed,\n        label: this._dom.RAINBOW.speedText,\n        \"default\": '50',\n        lsKey: 'manual-rainbow-speed'\n      });\n    }\n  }, {\n    key: \"_updateEffect\",\n    value: function _updateEffect(arg) {\n      // Either event or string\n      var effect = arg; // Init with presumed string\n\n      if (typeof arg !== 'string') {\n        effect = arg.target.dataset.effect; // Update effect with event target specific effect info\n      }\n\n      this._unselectAllEffect(); // Then use target as current selection\n\n\n      window.LF440.effect = effect;\n      this._dom[window.LF440.effect].container.style.display = 'block';\n\n      this._dom[window.LF440.effect].button.classList.add('selected');\n\n      if (window.LF440.isActive === true) {\n        window.LF440.sendAction().then(function () {\n          window.LF440.status = \"Effect \".concat(window.LF440.effect, \" activated\");\n          console.log(\"ManualController : Successfully activate effect \".concat(window.LF440.effect));\n        })[\"catch\"](function () {\n          window.LF440.status = \"Unable to set effect \".concat(window.LF440.effect);\n          console.error(\"ManualController : Failed to activate effect \".concat(window.LF440.effect));\n        });\n      } else {\n        window.LF440.status = \"Please start LightFever440\";\n        console.error(\"ManualController : Failed to activate effect \".concat(window.LF440.effect, \", LightFever440 isn't activated\"));\n      }\n    }\n  }, {\n    key: \"_unselectAllEffect\",\n    value: function _unselectAllEffect() {\n      // Unselect all buttons and hide all associated options\n      for (var _i = 0, _Object$entries = Object.entries(this._dom); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 1),\n            key = _Object$entries$_i[0];\n\n        this._dom[key].button.classList.remove('selected');\n\n        this._dom[key].container.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"initEffect\",\n    value: function initEffect(effect) {\n      this._unselectAllEffect(); // Update effect toggled\n\n\n      this._dom[effect].button.classList.add('selected');\n\n      this._dom[effect].container.style.display = 'block';\n    }\n  }, {\n    key: \"getActiveEffect\",\n    value: function getActiveEffect() {\n      // Find selected effect in destination mode (when switching to manual, re-open proper effect and options)\n      for (var _i2 = 0, _Object$entries2 = Object.entries(this._dom); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 1),\n            key = _Object$entries2$_i[0];\n\n        if (this._dom[key].button.classList.contains('selected')) {\n          this._dom[key].container.style.display = 'block';\n          return this._dom[key].button.dataset.effect;\n        }\n      } // Default is UNIFORM, but may never get called\n\n\n      return 'UNIFORM';\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = {};\n\n      if (window.LF440.effect === 'UNIFORM') {\n        options = {\n          color: _Utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToRgb(window.localStorage.getItem('manual-uniform-color')),\n          waveDelta: parseInt(this._dom.UNIFORM.waveDelta.value)\n        };\n      } else if (window.LF440.effect === 'CHASE') {\n        options = {\n          color: _Utils_js__WEBPACK_IMPORTED_MODULE_1__.hexToRgb(window.localStorage.getItem('manual-chase-color')),\n          speed: parseInt(this._dom.CHASE.speed.value),\n          size: parseInt(this._dom.CHASE.size.value),\n          spacing: parseInt(this._dom.CHASE.spacing.value)\n        };\n\n        if (this._dom.CHASE.rainbow.checked) {\n          delete options.color;\n          options.rainbow = this._dom.CHASE.rainbow.checked;\n        }\n      } else if (window.LF440.effect === 'RAINBOW') {\n        options = {\n          speed: parseInt(this._dom.RAINBOW.speed.value)\n        };\n      }\n\n      return options;\n    }\n  }]);\n\n  return ManualController;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ManualController);\n\n//# sourceURL=webpack://LightFever440/./js/components/ManualController.js?");

/***/ }),

/***/ "./js/components/ModalFactory.js":
/*!***************************************!*\
  !*** ./js/components/ModalFactory.js ***!
  \***************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ModalFactory = /*#__PURE__*/function () {\n  function ModalFactory(type, options) {\n    _classCallCheck(this, ModalFactory);\n\n    this._dom = {\n      overlay: document.getElementById('modal-overlay'),\n      stroboscope: {\n        container: document.getElementById('stroboscope-modal'),\n        delay: document.getElementById('stroboscope-delay'),\n        delayText: document.getElementById('stroboscope-delay-value'),\n        color: document.getElementById('stroboscope-color')\n      },\n      colorPicker: {\n        container: document.getElementById('color-picker-modal')\n      }\n    };\n\n    if (type === 'STROBOSCOPE') {\n      // Declare range sliders to make input range touch friendly\n      window.rangesliderJs.create(this._dom.stroboscope.delay, {\n        value: window.localStorage.getItem('stroboscope-delay') || '50'\n      });\n\n      this._stroboscopeModal();\n    } else if (type === 'COLOR_PICKER') {\n      this._colorPickerModal(options.color, options.callback);\n    }\n  }\n\n  _createClass(ModalFactory, [{\n    key: \"_stroboscopeModal\",\n    value: function _stroboscopeModal() {\n      var _this = this;\n\n      // Make modal visible\n      this._dom.overlay.classList.add('visible');\n\n      this._dom.stroboscope.container.classList.add('visible');\n\n      this._dom.stroboscope.delayText.innerHTML = window.localStorage.getItem('stroboscope-delay') || '50'; // Update range\n\n      var range = function range(event) {\n        _this._dom.stroboscope.delayText.innerHTML = event.target.value;\n        window.localStorage.setItem('stroboscope-delay', event.target.value);\n      };\n\n      new window.KellyColorPicker({\n        place: 'stroboscope-color-picker',\n        color: window.localStorage.getItem('stroboscope-color') || '#ffffff',\n        changeCursor: false,\n        userEvents: {\n          change: function change(self) {\n            window.localStorage.setItem('stroboscope-color', self.getCurColorHex());\n            document.getElementById('stroboscope-color').value = self.getCurColorHex();\n          }\n        }\n      }); // Close modal internal metohd\n\n      var _close = function close(event) {\n        if (event.target.id === 'stroboscope-modal-close' || event.target.id === 'modal-overlay') {\n          _this._dom.overlay.classList.remove('visible');\n\n          _this._dom.stroboscope.container.classList.remove('visible');\n\n          _this._dom.stroboscope.delay.removeEventListener('click', range);\n\n          _this._dom.overlay.removeEventListener('click', _close);\n\n          document.getElementById('stroboscope-modal-close').removeEventListener('click', _close);\n        }\n      }; // Binding now to be able to remove events properly\n\n\n      range = range.bind(this);\n      _close = _close.bind(this);\n      document.getElementById('stroboscope-color').addEventListener('click', function (event) {\n        event.preventDefault();\n      }); // Event listeners for modal\n\n      this._dom.stroboscope.delay.addEventListener('input', range);\n\n      this._dom.overlay.addEventListener('click', _close);\n\n      document.getElementById('stroboscope-modal-close').addEventListener('click', _close);\n    }\n  }, {\n    key: \"_colorPickerModal\",\n    value: function _colorPickerModal(color, callback) {\n      var _this2 = this;\n\n      // Make modal visible\n      this._dom.overlay.classList.add('visible');\n\n      this._dom.colorPicker.container.classList.add('visible'); // Close modal internal metohd\n\n\n      var _close2 = function close(event) {\n        if (event.target.id === 'color-picker-modal-close' || event.target.id === 'modal-overlay') {\n          _this2._dom.overlay.classList.remove('visible');\n\n          _this2._dom.colorPicker.container.classList.remove('visible');\n\n          _this2._dom.overlay.removeEventListener('click', _close2);\n\n          document.getElementById('color-picker-modal-close').removeEventListener('click', _close2);\n          callback(colorPicker.getCurColorHex());\n        }\n      };\n\n      _close2 = _close2.bind(this);\n      var colorPicker = new window.KellyColorPicker({\n        place: 'color-picker',\n        color: color || '#ffffff',\n        changeCursor: false,\n        userEvents: {\n          change: function change(self) {\n            document.getElementById('output-color').value = self.getCurColorHex();\n          }\n        }\n      });\n\n      this._dom.overlay.addEventListener('click', _close2);\n\n      document.getElementById('color-picker-modal-close').addEventListener('click', _close2);\n    }\n  }]);\n\n  return ModalFactory;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModalFactory);\n\n//# sourceURL=webpack://LightFever440/./js/components/ModalFactory.js?");

/***/ }),

/***/ "./js/components/Utils.js":
/*!********************************!*\
  !*** ./js/components/Utils.js ***!
  \********************************/
/*! namespace exports */
/*! export ajax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export colorPickerModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexToRgb [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hexToRgb\": () => /* binding */ hexToRgb,\n/* harmony export */   \"ajax\": () => /* binding */ ajax,\n/* harmony export */   \"colorPickerModal\": () => /* binding */ colorPickerModal\n/* harmony export */ });\n/* harmony import */ var _ModalFactory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalFactory.js */ \"./js/components/ModalFactory.js\");\n;\n/** @method\r\n * @name _hexToRgb\r\n * @private\r\n * @memberof LightFever440\r\n * @description <blockquote>Useful method to convert hexadecimal string into a RGB array of numbers.</blockquote>\r\n * @param {string} hex - The hexadecimal string to convert in RGB\r\n * @return {number[]} - The converted RGB array **/\n\nfunction hexToRgb(hex) {\n  // Real MV : https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb/5624139#5624139\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [255, 255, 255];\n}\n/** @method\r\n * @name _ajax\r\n * @private\r\n * @memberof LightFever440\r\n * @description <blockquote>Server call abstraction method that will dispatch a GET or a POST request to\r\n * the server, depending on the given parameters. It covers both the _getState and the sendAction method.</blockquote>\r\n * @param {string} url - The url to reach, either <code>state</code> (GET) or <code>action</code> (POST)\r\n * @param {object} data - The data to attach to the <code>action</code> calls. No required for <code>state</code> call\r\n * @returns {promise} The request <code>Promise</code>, format response as JSON on resolve, as error code string on reject **/\n\nfunction ajax(url, data) {\n  return new Promise(function (resolve, reject) {\n    // Prepare sent options with proper verb, headers and body (for POST only)\n    var options = {\n      method: data ? 'POST' : 'GET',\n      headers: new Headers([['Content-Type', 'application/json; charset=UTF-8'], ['Accept', 'application/json']]),\n      body: JSON.stringify(data)\n    }; // Perform fetch call and handle its output\n\n    fetch(url, options).then(function (response) {\n      if (response) {\n        if (response.ok) {\n          resolve(response.json());\n        } else {\n          reject(\"ERROR_\".concat(response.status));\n        }\n      } else {\n        reject('ERROR_MISSING_ARGUMENT');\n      }\n    })[\"catch\"](reject);\n  });\n}\nfunction colorPickerModal(color, callback) {\n  var intermediateCallback = function intermediateCallback(hex) {\n    callback(hex);\n  };\n\n  return new _ModalFactory_js__WEBPACK_IMPORTED_MODULE_0__.default('COLOR_PICKER', {\n    color: color,\n    callback: intermediateCallback\n  });\n}\n\n//# sourceURL=webpack://LightFever440/./js/components/Utils.js?");

/***/ }),

/***/ "./css/LightFever440.scss":
/*!********************************!*\
  !*** ./css/LightFever440.scss ***!
  \********************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://LightFever440/./css/LightFever440.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./js/LightFever440.js");
/******/ })()
.default;